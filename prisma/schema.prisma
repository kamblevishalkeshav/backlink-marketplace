// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // Direct connection for better performance in serverless environments
  directUrl = env("DIRECT_URL")
}

// Define your models below
model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String?
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  pages     Page[]
  listings  Listing[]
}

enum Role {
  USER
  ADMIN
}

model Profile {
  id        String   @id @default(cuid())
  userId    String   @unique
  bio       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Website Content Models
model Page {
  id          String        @id @default(cuid())
  title       String
  slug        String        @unique
  isPublished Boolean       @default(false)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  sections    PageSection[]
  createdBy   User?         @relation(fields: [createdById], references: [id])
  createdById String?
}

model PageSection {
  id          String           @id @default(cuid())
  name        String
  type        SectionType
  order       Int
  content     Json
  page        Page             @relation(fields: [pageId], references: [id], onDelete: Cascade)
  pageId      String
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}

enum SectionType {
  HERO
  FEATURES
  LOGO_CAROUSEL
  MEDIA_BACKLINKS
  HOW_IT_WORKS
  ANALYTICS_DASHBOARD
  TESTIMONIALS
  FAQ
  CTA
  CUSTOM
}

model Asset {
  id        String   @id @default(cuid())
  name      String
  url       String
  type      AssetType
  size      Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum AssetType {
  IMAGE
  VIDEO
  DOCUMENT
}

// Listing Models
enum ListingStatus {
  PENDING
  APPROVED
  REJECTED
}

enum ListingType {
  GUEST_POST
  HOMEPAGE_LINK
  INNERPAGE_LINK
  SITEWIDE_LINK
}

enum ContentWriterType {
  BOTH
  YOU
  PUBLISHER
}

enum ContentAcceptanceStatus {
  ACCEPTED
  NOT_ACCEPTED
  PROHIBITED
}

model Listing {
  id           String       @id @default(cuid())
  price        Float
  offerRate    Float?
  domain       String
  verified     Boolean      @default(false)
  tags         String[]
  listingType  ListingType
  permanent    Boolean
  months       Int?
  wordCount    Int
  workingDays  Int
  contentWriter ContentWriterType
  primaryLanguage String
  nativeLanguage  String
  extraLanguage   String?
  category     String
  countryCode  String
  da           Int
  drValue      Int
  drPercentage String
  as           Int
  traffic      Int
  keywords     Int
  refDomains   Int
  niches       String[]
  publisherNote String?
  status       ListingStatus @default(PENDING)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  createdBy    User?         @relation(fields: [createdById], references: [id])
  createdById  String?
  countryTraffic CountryTraffic[]
  acceptedContent AcceptedContent?
}

model CountryTraffic {
  id           String   @id @default(cuid())
  countryCode  String
  percentage   Int
  traffic      Int?
  listing      Listing  @relation(fields: [listingId], references: [id], onDelete: Cascade)
  listingId    String
}

model AcceptedContent {
  id           String                 @id @default(cuid())
  casino       ContentAcceptanceStatus? @default(NOT_ACCEPTED)
  finance      ContentAcceptanceStatus? @default(NOT_ACCEPTED)
  erotic       ContentAcceptanceStatus? @default(NOT_ACCEPTED)
  dating       ContentAcceptanceStatus? @default(NOT_ACCEPTED)
  crypto       ContentAcceptanceStatus? @default(NOT_ACCEPTED)
  cbd          ContentAcceptanceStatus? @default(NOT_ACCEPTED)
  medicine     ContentAcceptanceStatus? @default(NOT_ACCEPTED)
  listing      Listing                @relation(fields: [listingId], references: [id], onDelete: Cascade)
  listingId    String                 @unique
}
